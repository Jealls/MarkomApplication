@model MarkomApplication.ViewModel.MenuViewModel

@Styles.Render("~/Content/dropdown-autocomplete")
@Styles.Render("~/Content/css-validate")

@Html.AntiForgeryToken()

<div class="border py-3 rounded">

    <div class="form-row">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group form-inline w-100">
            <label class="control-label col-md-5" for="code">* Menu Code</label>
            <div class="col-md-7">
                @Html.EditorFor(model => model.code, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", placeholder = "Auto Generated" } })
                @Html.ValidationMessageFor(model => model.code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group form-inline w-100">
            <label class="control-label col-md-5" for="name">* Menu Name</label>
            <div class="col-md-7">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", placeholder = "Type Menu Name", maxLength = 50 } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group form-inline w-100">
            <label class="control-label col-md-5" for="controller">* Controller Name</label>
            <div class="col-md-7">
                @Html.EditorFor(model => model.controller, new { htmlAttributes = new { @class = "form-control", placeholder = "Type Controller Name", maxLength = 150 } })
                @Html.ValidationMessageFor(model => model.controller, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group form-inline w-100">
            @Html.LabelFor(model => model.parentId, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.parentName, new { htmlAttributes = new { @class = "form-control", placeholder = "- Select Parent Name -", maxLength = 50 } })
                @*@Html.DropDownListFor(model => model.parentName, (IEnumerable<SelectListItem>)ViewBag.MenuParentName, "", new { @class = "form-control dropdown-style", @style = "width:90%; max-width: 280px;" })*@
                <input type="hidden" id="parentId" name="parentId" />
                @Html.ValidationMessageFor(model => model.parentName, "", new { @class = "text-danger" })
            </div>
        </div>


    </div>
    <div class="form-row mx-1 py-lg-4 justify-content-end" style="background-color:#F8F8F8;">

        <button type="submit" name="submit" value="Create" id="btn_save_menu" class="btn btn-primary active mr-2" data-url="@Url.Action("CreateDataMenu", "Menu")">Save</button>
        <button type="button" value="Cancel" data-dismiss="modal" class="btn btn-warning mr-5 text-white">Cancel</button>

    </div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
