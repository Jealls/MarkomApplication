@model MarkomApplication.ViewModel.CompanyViewModel

@{
    ViewBag.Title = "AddCompany";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="border py-3 rounded">
        <div class="form-row">
            <div class="form-group col-md-6 form-inline">
                <label class="control-label col-md-5" for="name">* Company Code</label>
                @*@Html.LabelFor(model => model.code, htmlAttributes: new { @class = "control-label col-md-5" })*@
                <div class="col-md-7  code_placeholder">
                    @Html.EditorFor(model => model.code, new { htmlAttributes = new { @class = "form-control", @style = "width:100%;", placeholder="Auto Generate", @disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.code, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6 form-inline">
                <label class="control-label col-md-5" for="name">* Company Name</label>
                @*@Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-5" })*@
                <div class="col-md-7">
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", @style = "width:100%;", placeholder = "Type Company Name" } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-row">
            <div class="form-horizontal col-md-6">

                <div class="form-group form-inline">
                    <label class="control-label col-md-5" for="email">Email</label>
                    @*@Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-5" })*@
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", @style = "width:100%;", placeholder = "Type Email" } })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-inline">
                    <label class="control-label col-md-5" for="phone">Phone</label>
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control", @style = "width:100%;", placeholder = "Type Phone" } })
                        @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

            <div class="form-group col-md-6 form-inline">
                <label class="control-label col-md-5" for="address">Address</label>
                <div class="col-md-7">
                    @Html.TextAreaFor(model => model.address, new { @class = "form-control", @style = "width:100%;", placeholder = "Type Address" })
                    @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div class="form-row mx-1 py-lg-4 justify-content-end" style="background-color:#F8F8F8;">
            <a href="#" class="btn btn-primary active mr-2" role="button" aria-pressed="true">Save</a>
            <a href="#" class="btn btn-warning mr-5 text-white" role="button" aria-pressed="true" data-dismiss="modal">Cancel</a>
        </div>

     </div>
}

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
