@model MarkomApplication.ViewModel.EventViewModel
@Styles.Render("~/Content/css-validate")

@Html.AntiForgeryToken()

    <div class="form-row">
        <div class="form-horizontal col-md-6">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group form-inline">
                <label class="control-label col-md-5" for="code">* Transaction Code</label>
                <div class="col-md-7">
                    @Html.EditorFor(model => model.code, new { htmlAttributes = new { @class = "form-control", @style = "width:100%;", placeholder = "Auto generated", maxLength = 50, @disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.code, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-inline">
                <label class="control-label col-md-5" for="eventName">* Event Name</label>
                <div class="col-md-7">
                    @Html.EditorFor(model => model.eventName, new { htmlAttributes = new { @class = "form-control", @style = "width:100%;", placeholder = "Type Event Name", maxLength = 255, onkeyup = "validationEName()" } })
                    @Html.ValidationMessageFor(model => model.eventName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-inline">
                <label class="control-label col-md-5" for="place">* Event Place</label>
                <div class="col-md-7">
                    @Html.EditorFor(model => model.place, new { htmlAttributes = new { @class = "form-control", @style = "width:100%;", placeholder = "Type Event Place", maxLength = 255, onkeyup = "validationEPlace()" } })
                    @Html.ValidationMessageFor(model => model.place, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-inline">
                <label class="control-label col-md-5" for="eventName">* Event Start Date</label>
                <div class="col-md-7">
                    @Html.EditorFor(model => model.startDate, new { htmlAttributes = new { @class = "form-control", @style = "width:100%;", placeholder = "Select Date", maxLength = 20, onkeyup = "validationEStartDate()" } })
                    @Html.ValidationMessageFor(model => model.startDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-inline">
                <label class="control-label col-md-5" for="eventName">* Event End Date</label>
                <div class="col-md-7">
                    @Html.EditorFor(model => model.endDate, new { htmlAttributes = new { @class = "form-control", @style = "width:100%;", placeholder = "Select Date", maxLength = 20, onkeyup = "validationEEndDate()" } })
                    @Html.ValidationMessageFor(model => model.endDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-inline">
                <label class="control-label col-md-5" for="eventName">* Budget</label>
                <div class="col-md-7">
                    @Html.EditorFor(model => model.budget, new { htmlAttributes = new { @class = "form-control", @style = "width:100%;", placeholder = "Type Event Budget", maxLength = 50, onkeyup = "validationEBudget()" } })
                    @Html.ValidationMessageFor(model => model.budget, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div class="form-horizontal col-md-6">
            <div class="form-group form-inline">
                <label class="control-label col-md-5" for="requestBy">* Reguest By</label>
                <div class="col-md-7">
                    @Html.EditorFor(model => model.requestBy, new { htmlAttributes = new { @class = "form-control", @style = "width:100%;", @disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.requestBy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-inline">
                <label class="control-label col-md-5" for="requestDate">* Reguest Date</label>
                <div class="col-md-7">
                    @Html.EditorFor(model => model.requestDate, new { htmlAttributes = new { @class = "form-control", @style = "width:100%;", @disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.requestDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-inline">
                @Html.LabelFor(model => model.note, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-7">
                    @Html.TextAreaFor(model => model.note, new { @class = "form-control", @style = "width:100%;", placeholder = "Type Note", maxlength = 255 })
                    @Html.ValidationMessageFor(model => model.note, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div class="form-row mx-1 py-lg-4 justify-content-end col-md-12" style="background-color:#F8F8F8;">

            <button type="submit" name="submit" value="Create" id="btn_save_event" class="btn btn-primary active mr-2" data-url="@Url.Action("CreateDataEvent", "Event")">Save</button>
            <button type="button" value="Cancel" data-dismiss="modal" class="btn btn-warning mr-5 text-white">Cancel</button>

        </div>

    </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
